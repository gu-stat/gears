% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/error_functions.R
\name{error_functions}
\alias{error_functions}
\alias{fcn_MSE}
\alias{fcn_MAD}
\alias{fcn_SMAPE}
\alias{fcn_MASE}
\alias{fcn_OWA}
\title{Functions to calculate the forecast errors.}
\usage{
error_functions(
  error.measure,
  forecasts,
  outsample,
  insample = NULL,
  forecast.horizon,
  alpha.level = 0.05
)

fcn_MSE(forecasts, outsample)

fcn_MAD(forecasts, outsample)

fcn_SMAPE(forecasts, outsample)

fcn_MASE(forecasts, outsample, insample)

fcn_OWA(forecasts, outsample, insample, forecast.horizon, alpha.level)
}
\arguments{
\item{error.measure}{A character string with the name of the error measure.
These can be 'mse', 'mad', 'smape', 'mase', and 'owa' (see Details).}

\item{forecasts}{A numeric vector with the point forecasts.}

\item{outsample}{A numeric vector with the test data set.}

\item{insample}{A numeric vector with the train data set.}

\item{forecast.horizon}{A numeric value with the length of the forecast lead.}

\item{alpha.level}{A numeric value with the alpha level to be used in the
test to detect seasonality. Default is 0.05.}
}
\value{
A numeric value with the forecast error.
}
\description{
\code{error_functions} returns the forecast errors for the selected error
measure.
}
\section{Functions}{
\itemize{
\item \code{fcn_MSE}: MSE - Mean Absolute Deviation

\item \code{fcn_MAD}: MAD - Mean Absolute Deviation

\item \code{fcn_SMAPE}: SMAPE - Symmetric Mean Absolute Percentage Error

\item \code{fcn_MASE}: MASE - Mean Absolute Scaled Error

\item \code{fcn_OWA}: OWA - Overall Weighted Average
}}

\examples{
# Using NAIVE2:
# Observations until the 100th will be in the insample (train) data set.
tmp.cut.at <- 100

tmp.forecast.horizon <- length(datasets::AirPassengers) - tmp.cut.at

tmp.orig.start <- tsp(datasets::AirPassengers)[1]
tmp.orig.end   <- tsp(datasets::AirPassengers)[2]
tmp.orig.freq  <- tsp(datasets::AirPassengers)[3]


# Get train data (insample)

tmp.train.start <- tmp.orig.start
tmp.train.end   <- tmp.orig.start + ((tmp.cut.at - 1) * 1 / tmp.orig.freq)

tmp.train.data  <- window(
  x         = datasets::AirPassengers,
  start     = tmp.train.start,
  end       = tmp.train.end,
  frequency = tmp.orig.freq
)

# Get test data (outsample)

tmp.test.start <- tmp.orig.start + (tmp.cut.at * 1 / tmp.orig.freq)
tmp.test.end   <- tmp.orig.end

tmp.test.data  <- window(
  x         = datasets::AirPassengers,
  start     = tmp.test.start,
  end       = tmp.test.end,
  frequency = tmp.orig.freq
)

# Get Forecasts
tmp.forecasts <- forecast_naive2(
  ts.data          = tmp.train.data,
  forecast.horizon = tmp.forecast.horizon,
  alpha.level      = 0.05
)

# Get MSE

error_functions(
  error.measure      = "mse",
  forecasts          = tmp.forecasts,
  outsample          = tmp.test.data,
  #'insample           = tmp.test.data,
  forecast.horizon   = tmp.forecast.horizon,
  alpha.level        = 0.05
)

# Get OWA

error_functions(
  error.measure      = "owa",
  forecasts          = tmp.forecasts,
  outsample          = tmp.test.data,
  insample           = tmp.test.data,
  forecast.horizon   = tmp.forecast.horizon,
  alpha.level        = 0.05
)
}
